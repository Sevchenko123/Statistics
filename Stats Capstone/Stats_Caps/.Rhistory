library(BAS)
library(ggplot2)
library(GGally)
library(leaps)
library(MASS)
ggplot(ames_train,aes(x=Neighborhood,y=price))+geom_boxplot(color='black',fill='red',outlier.shape=NA)+theme_bw()+labs(y="Prices",x="Neighborhood") # Boxplot
my_fn <- function(data, mapping, ...){
p <- ggplot(data = data, mapping = mapping) +
geom_point(pch=19,alpha=0.5,color='blue') +
geom_smooth(method=lm, fill="red", color="red", se=FALSE, ...) +
theme_bw()
p
}
g = ggpairs(ames_train,columns = c(3,2,7,20,21,41,46,47,51,52,53,64), lower = list(continuous = my_fn))
g
par(mfrow=c(1,2))
ggplot(ames_train,aes(x=Kitchen.Qual,y=price))+geom_boxplot(color=c('black','blue','red','brown','darkgreen'))+theme_minimal()+labs(x="Kitchen Quality",y="Price")
ggplot(ames_train,aes(x=Heating.QC,y=price))+geom_boxplot(color=c('black','blue','red','brown','darkgreen'))+theme_minimal()+labs(x="Heating Quality",y="Price")
model <- lm(log(price)~log(Overall.Qual+1)+log(area+1)+log(Total.Bsmt.SF+1)+log(X1st.Flr.SF+1)+log(Full.Bath+1)+log(Garage.Area+1)+log(Lot.Area+1)+log(X2nd.Flr.SF+1)+log(Half.Bath+1)+log(Bedroom.AbvGr+1),data=ames_train)
summary(model)
model.AIC <- stepAIC(model,direction="both",k=2)
summary(model.AIC)
model.bas <- bas.lm(log(price)~log(Overall.Qual+1)+log(area+1)+log(Total.Bsmt.SF+1)+log(X1st.Flr.SF+1)+log(Full.Bath+1)+log(Garage.Area+1)+log(Lot.Area+1)+log(X2nd.Flr.SF+1)+log(Half.Bath+1)+log(Bedroom.AbvGr+1),data = ames_train, prior = "AIC", modelprior=uniform())
ggplot(data = model.AIC, aes(x = .fitted, y = .resid)) +
geom_point(color="red",pch=19) +
geom_hline(yintercept = 0, linetype = "dashed") +
xlab("Fitted values") +
ylab("Residuals")+theme_bw()
ggplot(data = model.AIC, aes(x = .resid)) +
geom_histogram(color="white",fill="red") +
xlab("Residuals")+theme_bw()
qqnorm(model.AIC$residuals,col="Red")
qqline(model.AIC$residuals,col="black")
pred.test.model <- predict(model,newdata = ames_test)
pred.rmse.model <- sqrt(mean((exp(pred.test.model)-ames_test$price)^2))
pred.rmse.model
pred.test.modelaic <- predict(model.AIC,newdata = ames_test)
pred.rmse.modelaic <- sqrt(mean((exp(pred.test.modelaic)-ames_test$price)^2))
pred.rmse.modelaic
pred.test.HPM <- predict(model.bas, newdata = ames_test, estimator="HPM")
pred.HPM.rmse <- sqrt(mean((exp(pred.test.HPM$fit) - ames_test$price)^2))
pred.HPM.rmse
load("ames_test.Rdata")
final_predictions <- predict(model.AIC,ames_test, interval = "prediction", level = 0.95)
pred.final <- sqrt(mean((exp(final_predictions) - ames_test$price)^2))
pred.final
final_model <- lm(log(price)~log(Overall.Qual+1)+log(Overall.Cond+1)+log(area+1)+log(Total.Bsmt.SF+1)+log(X1st.Flr.SF+1)+log(Full.Bath+1)+log(Garage.Area+1)+log(Lot.Area+1)+log(X2nd.Flr.SF+1)+log(Half.Bath+1)+log(Bedroom.AbvGr+1)+Heating.QC+Kitchen.Qual+Garage.Qual+Bsmt.Qual+Neighborhood+Central.Air+log(Year.Built)+log(TotRms.AbvGrd)+log(Year.Remod.Add),data=ames_train)
summary(final_model)
ggplot(data = final_model, aes(x = .fitted, y = .resid)) +
geom_point(color="blue",pch=19) +
geom_hline(yintercept = 0, linetype = "dashed") +
xlab("Fitted values") +
ylab("Residuals")+theme_bw()
ggplot(data = final_model, aes(x = .resid)) +
geom_histogram(color="white",fill="blue",bins=30) +
xlab("Residuals")+theme_bw()
qqnorm(final_model$residuals,col="Blue")
qqline(final_model$residuals,col="black")
modelf <- stepAIC(full_model,direction="both",k=2)
modelf <- stepAIC(final_model,direction="both",k=2)
modelf <- stepAIC(final_model,direction="backward",k=2)
modelf <- stepAIC(final_model,direction="forward",k=2)
m1 <- stepAIC(full_model,direction="forward",k=2) # AIC criterion
m1 <- stepAIC(final_model,direction="forward",k=2) # AIC criterion
final_predictions <- predict(final_model,ames_test, interval = "prediction", level = 0.95)
pred.final <- sqrt(mean((exp(final_predictions) - ames_test$price)^2))
pred.final
final_predictions <- predict(final_model,ames_test, interval = "prediction", level = 0.95)
pred.final <- sqrt(mean((exp(final_predictions$fit) - ames_test$price)^2))
final_predictions <- predict(final_model,ames_test, interval = "prediction", level = 0.95)
pred.final <- sqrt(mean((exp(final_predictions) - ames_test$price)^2))
pred.final
final_predictions
final_predictions
final_predictions <- is.data.frame(final_predictions)
final_predictions <- predict(final_model,ames_test)
pred.final <- sqrt(mean((exp(final_predictions) - ames_test$price)^2))
pred.final
rm(final_predictions)
final_predictions <- predict(final_model,ames_test)
final_predictions <- as.data.frame(final_predictions)
final_predictions <- na.omit(final_predictions)
pred.final <- sqrt(mean((exp(final_predictions) - ames_test$price)^2))
pred.final
prcomp(ames_train)
View(ames_test)
final_predictions <- predict(final_model,ames_test)
final_predictions <- as.data.frame(final_predictions)
final_predictions <- na.omit(final_predictions)
pred.final <- sqrt(mean((exp(final_predictions) - ames_test$price)^2))
pred.final
final_predictions <- predict(final_model,ames_test)
final_predictions <- as.data.frame(final_predictions)
final_predictions <- na.omit(final_predictions)
pred.final <- sqrt(mean((exp(final_predictions) - ames_test$price)^2))
pred.final
load("ames_validation.Rdata")
final_predictions <- predict(final_model,ames_validation, interval = "prediction", level = 0.95)
View(ames_validation)
table(ames_validation$Neighborhood)
table(ames_train$Neighborhood)
ames_validation <- ames_validation %>% filter(Neighborhood != "Landmrk")
final_predictions <- predict(final_model,ames_validation, interval = "prediction", level = 0.95)
pred.final <- sqrt(mean((exp(final_predictions) - ames_validation$price)^2))
pred.final
final_predictions <- predict(final_model,ames_validation,interval="prediction",level=0.95)
final_predictions <- as.data.frame(final_predictions)
final_predictions <- na.omit(final_predictions)
pred.final <- sqrt(mean((exp(final_predictions) - ames_validation$price)^2))
pred.final
final_predictions <- predict(final_model,ames_validation,interval="prediction",level=0.95)
final_predictions <- as.data.frame(final_predictions)
final_predictions <- na.omit(final_predictions)
pred.final <- sqrt(mean((exp(final_predictions$fit) - ames_validation$price)^2))
pred.final
ames_test$price
final_predictions <- predict(final_model,ames_test,interval="prediction",level=0.95)
final_predictions <- as.data.frame(final_predictions)
final_predictions[is.na(final_predictions)] <- 0
pred.final <- sqrt(mean((exp(final_predictions) - ames_test$price)^2))
pred.final
final_predictions <- predict(final_model,ames_test,interval="prediction",level=0.95)
final_predictions <- as.data.frame(final_predictions)
final_predictions[is.na(final_predictions)] <- 0
pred.final <- sqrt(mean((exp(final_predictions) - ames_test$price)^2))
pred.final
final_predictions <- predict(final_model,ames_test,interval="prediction",level=0.95)
final_predictions <- as.data.frame(final_predictions)
final_predictions[is.na(final_predictions)] <- 0
pred.final <- sqrt(mean((exp(final_predictions) - ames_test$price)^2))
pred.final
final_predictions <- predict(final_model,ames_validation,interval="prediction",level=0.95)
final_predictions <- as.data.frame(final_predictions)
final_predictions[is.na(final_predictions)] <- 0
pred.final <- sqrt(mean((exp(final_predictions) - ames_validation$price)^2))
pred.final
d[is.na(d)] <- 0
final_predictions
coverage.prob.full <- mean(ames_validation$price > predict.full[,"lwr"] &
ames_validation$price < predict.full[,"upr"])
coverage.prob.full
coverage.prob.full <- mean(ames_validation$price > final_predictions[,"lwr"] &
ames_validation$price < final_predictions[,"upr"])
coverage.prob.full
nrow(ames_validation$price>final_predictions[,"lwr"])
rm(final_predictions)
final_predictions <- predict(final_model,ames_validation,interval="prediction",level=0.95)
final_predictions <- as.data.frame(final_predictions)
final_predictions[is.na(final_predictions)] <- 0
pred.final <- sqrt(mean((exp(final_predictions) - ames_validation$price)^2))
pred.final
coverage.prob.full <- mean(ames_validation$price > final_predictions[,"lwr"] &
ames_validation$price < final_predictions[,"upr"])
coverage.prob.full
final_predictions
View(final_predictions)
ames_validation$price>final_predictions[,"lwr"]
predict.full <- exp(predict(final_model, ames_validation, interval = "prediction"))
predict.full <- exp(predict(final_model, ames_validation, interval = "prediction"))
coverage.prob.full <- mean(ames_validation$price > predict.full[,"lwr"] &
ames_validation$price < predict.full[,"upr"])
coverage.prob.full
predict.full <- exp(predict(final_model, ames_validation, interval = "prediction"))
coverage.prob.full <- mean(ames_test$price > predict.full[,"lwr"] &
ames_test$price < predict.full[,"upr"])
coverage.prob.full
predict.full <- exp(predict(final_model, ames_validation, interval = "prediction"))
predict.full <- as.data.frame(predict.full)
predict.full[is.na(predict.full)] <- 0
coverage.prob.full <- mean(ames_validation$price > predict.full[,"lwr"] &
ames_validation$price < predict.full[,"upr"])
coverage.prob.full
pred.test.model <- predict(model,newdata=ames_test)
pred.rmse.model <- sqrt(mean((exp(pred.test.model)-ames_test$price)^2))
pred.rmse.model
pred.test.modelaic <- predict(model.AIC,newdata = ames_test)
pred.rmse.modelaic <- sqrt(mean((exp(pred.test.modelaic)-ames_test$price)^2))
pred.rmse.modelaic
load("ames_validation.Rdata")
ames_validation <- ames_validation %>% filter(Neighborhood != "Landmrk")
pred.test.model <- predict(model,newdata=ames_test)
pred.rmse.model <- sqrt(mean((exp(pred.test.model)-ames_test$price)^2))
pred.rmse.model
pred.test.model <- predict(model,newdata=ames_train)
pred.rmse.model <- sqrt(mean((exp(pred.test.model)-ames_train$price)^2))
pred.rmse.model
pred.test.model <- predict(model,newdata=ames_test)
pred.rmse.model <- sqrt(mean((exp(pred.test.model)-ames_test$price)^2))
pred.rmse.model
final_predictions <- predict(model.AIC,ames_test, interval = "prediction", level = 0.95)
pred.final <- sqrt(mean((exp(final_predictions) - ames_test$price)^2))
pred.final
pred.test.modelaic <- predict(model.AIC,newdata = ames_test)
pred.rmse.modelaic <- sqrt(mean((exp(pred.test.modelaic)-ames_test$price)^2))
pred.rmse.modelaic
pred.test.HPM <- predict(model.bas, newdata = ames_test, estimator="HPM")
library(statsr)
library(dplyr)
library(BAS)
library(ggplot2)
library(GGally)
library(leaps)
library(MASS)
pred.test.HPM <- predict(model.bas, newdata = ames_test, estimator="HPM")
pred.HPM.rmse <- sqrt(mean((exp(pred.test.HPM$fit) - ames_test$price)^2))
pred.HPM.rmse
table(ames_train$Sale.Condition)
final_predictions <- predict(model.AIC,ames_test, interval = "prediction", level = 0.95)
pred.final <- sqrt(mean((exp(final_predictions$fit) - ames_test$price)^2))
final_predictions <- predict(model.AIC,ames_test, interval = "prediction", level = 0.95)
pred.final <- sqrt(mean((exp(final_predictions) - ames_test$price)^2))
pred.final
load("ames_train.Rdata")
library(statsr)
library(dplyr)
library(BAS)
library(ggplot2)
library(GGally)
library(leaps)
library(MASS)
load("ames_train.Rdata")
load("ames_train.Rdata")
pred.test.model <- predict(model,newdata=ames_train)
model <- lm(log(price)~log(Overall.Qual+1)+log(area+1)+log(Total.Bsmt.SF+1)+log(X1st.Flr.SF+1)+log(Full.Bath+1)+log(Garage.Area+1)+log(Lot.Area+1)+log(X2nd.Flr.SF+1)+log(Half.Bath+1)+log(Bedroom.AbvGr+1),data=ames_train)
summary(model)
load("ames_train.Rdata")
pred.test.model <- predict(model,newdata=ames_train)
pred.rmse.model <- sqrt(mean((exp(pred.test.model)-ames_train$price)^2))
pred.rmse.model
pred.test.model
load("ames_train.Rdata")
pred.test.model <- predict(model,newdata=ames_train)
pred.test.model[is.na(pred.test.model)] <- 0
pred.rmse.model <- sqrt(mean((exp(pred.test.model)-ames_train$price)^2))
pred.rmse.model
model <- lm(log(price)~log(Overall.Qual+1)+log(area+1)+log(Total.Bsmt.SF+1)+log(Full.Bath+1)+log(Garage.Area+1)+log(Lot.Area+1)+log(X2nd.Flr.SF+1)+log(Half.Bath+1)+log(Bedroom.AbvGr+1),data=ames_train)
summary(model)
model.AIC <- stepAIC(model,direction="both",k=2)
summary(model.AIC) # model based on AIC criterion
model.bas <- bas.lm(log(price)~log(Overall.Qual+1)+log(area+1)+log(Total.Bsmt.SF+1)+log(X1st.Flr.SF+1)+log(Full.Bath+1)+log(Garage.Area+1)+log(Lot.Area+1)+log(X2nd.Flr.SF+1)+log(Half.Bath+1)+log(Bedroom.AbvGr+1),data = ames_train, prior = "AIC", modelprior=uniform()) # Bayesian Regression Model
ggplot(data = model.AIC, aes(x = .fitted, y = .resid)) +
geom_point(color="red",pch=19) +
geom_hline(yintercept = 0, linetype = "dashed") +
xlab("Fitted values") +
ylab("Residuals")+theme_bw()
ggplot(data = model.AIC, aes(x = .resid)) +
geom_histogram(color="white",fill="red") +
xlab("Residuals")+theme_bw()
qqnorm(model.AIC$residuals,col="Red")
qqline(model.AIC$residuals,col="black")
load("ames_train.Rdata")
pred.test.model <- predict(model,newdata=ames_train)
pred.test.model[is.na(pred.test.model)] <- 0
pred.rmse.model <- sqrt(mean((exp(pred.test.model)-ames_train$price)^2))
pred.rmse.model
pred.test.modelaic <- predict(model.AIC,newdata=ames_train)
pred.rmse.modelaic <- sqrt(mean((exp(pred.test.modelaic)-ames_train$price)^2))
pred.rmse.modelaic
load("ames_train.Rdata")
pred.test.model <- predict(model,newdata=ames_train)
pred.test.model[is.na(pred.test.model)] <- 0
pred.rmse.model <- sqrt(mean((exp(pred.test.model)-ames_train$price)^2))
pred.rmse.model
pred.test.modelaic <- predict(model.AIC,newdata=ames_train)
pred.test.model[is.na(pred.test.model)] <- 0
pred.rmse.modelaic <- sqrt(mean((exp(pred.test.modelaic)-ames_train$price)^2))
pred.rmse.modelaic
load("ames_train.Rdata")
pred.test.model <- predict(model,newdata=ames_train)
pred.test.model[is.na(pred.test.model)] <- 0
pred.rmse.model <- sqrt(mean((exp(pred.test.model)-ames_train$price)^2))
pred.rmse.model
pred.test.modelaic <- predict(model.AIC,newdata=ames_train)
pred.test.modelaic[is.na(pred.test.modelaic)] <- 0
pred.rmse.modelaic <- sqrt(mean((exp(pred.test.modelaic)-ames_train$price)^2))
pred.rmse.modelaic
View(ames_train)
model <- lm(log(price)~log(Overall.Qual+1)+log(area+1)+log(Total.Bsmt.SF+1)+log(X1st.Flr.Sf+1)+log(Full.Bath+1)+log(Garage.Area+1)+log(Lot.Area+1)+log(X2nd.Flr.SF+1)+log(Half.Bath+1)+log(Bedroom.AbvGr+1),data=ames_train)
model <- lm(log(price)~log(Overall.Qual+1)+log(area+1)+log(Total.Bsmt.SF+1)+log(X1st.Flr.SF+1)+log(Full.Bath+1)+log(Garage.Area+1)+log(Lot.Area+1)+log(X2nd.Flr.SF+1)+log(Half.Bath+1)+log(Bedroom.AbvGr+1),data=ames_train)
summary(model)
load("ames_train.Rdata")
pred.test.model <- predict(model,newdata=ames_train)
pred.test.model[is.na(pred.test.model)] <- 0
pred.rmse.model <- sqrt(mean((exp(pred.test.model)-ames_train$price)^2))
pred.rmse.model # RMSE of First model
pred.test.modelaic <- predict(model.AIC,newdata=ames_train)
pred.test.modelaic[is.na(pred.test.modelaic)] <- 0
pred.rmse.modelaic <- sqrt(mean((exp(pred.test.modelaic)-ames_train$price)^2))
pred.rmse.modelaic # RMSE of Model based on AIC criterion
pred.test.HPM <- predict(model.bas, newdata = ames_train, estimator="HPM")
pred.HPM.rmse <- sqrt(mean((exp(pred.test.HPM$fit) - ames_train$price)^2))
pred.HPM.rmse
pred.test.HPM <- predict(model.bas, newdata = ames_test, estimator="HPM")
load("ames_train.Rdata")
pred.test.model <- predict(model,newdata=ames_train)
pred.test.model[is.na(pred.test.model)] <- 0
pred.rmse.model <- sqrt(mean((exp(pred.test.model)-ames_train$price)^2))
pred.rmse.model # RMSE of First model
pred.test.modelaic <- predict(model.AIC,newdata=ames_train)
pred.test.modelaic[is.na(pred.test.modelaic)] <- 0
pred.rmse.modelaic <- sqrt(mean((exp(pred.test.modelaic)-ames_train$price)^2))
pred.rmse.modelaic # RMSE of Model based on AIC criterion
pred.test.HPM <- predict(model.bas, newdata = ames_train, estimator="HPM")
pred.HPM.rmse <- sqrt(mean((exp(pred.test.HPM$fit) - ames_train$price)^2))
pred.HPM.rmse
load("ames_train.Rdata")
pred.test.model <- predict(model,newdata=ames_train)
pred.test.model[is.na(pred.test.model)] <- 0
pred.rmse.model <- sqrt(mean((exp(pred.test.model)-ames_train$price)^2))
pred.rmse.model # RMSE of First model
pred.test.modelaic <- predict(model.AIC,newdata=ames_train)
pred.test.modelaic[is.na(pred.test.modelaic)] <- 0
pred.rmse.modelaic <- sqrt(mean((exp(pred.test.modelaic)-ames_train$price)^2))
pred.rmse.modelaic # RMSE of Model based on AIC criterion
pred.test.HPM <- predict(model.bas, newdata = ames_train, estimator="MPM")
pred.HPM.rmse <- sqrt(mean((exp(pred.test.HPM$fit) - ames_train$price)^2))
pred.HPM.rmse
load("ames_train.Rdata")
pred.test.model <- predict(model,newdata=ames_train)
pred.test.model[is.na(pred.test.model)] <- 0
pred.rmse.model <- sqrt(mean((exp(pred.test.model)-ames_train$price)^2))
pred.rmse.model # RMSE of First model
pred.test.modelaic <- predict(model.AIC,newdata=ames_train)
pred.test.modelaic[is.na(pred.test.modelaic)] <- 0
pred.rmse.modelaic <- sqrt(mean((exp(pred.test.modelaic)-ames_train$price)^2))
pred.rmse.modelaic # RMSE of Model based on AIC criterion
pred.test.HPM <- predict(model.bas, newdata = ames_train, estimator="BMA")
pred.HPM.rmse <- sqrt(mean((exp(pred.test.HPM$fit) - ames_train$price)^2))
load("ames_train.Rdata")
pred.test.model <- predict(model,newdata=ames_train)
pred.test.model[is.na(pred.test.model)] <- 0
pred.rmse.model <- sqrt(mean((exp(pred.test.model)-ames_train$price)^2))
pred.rmse.model # RMSE of First model
pred.test.modelaic <- predict(model.AIC,newdata=ames_train)
pred.test.modelaic[is.na(pred.test.modelaic)] <- 0
pred.rmse.modelaic <- sqrt(mean((exp(pred.test.modelaic)-ames_train$price)^2))
pred.rmse.modelaic # RMSE of Model based on AIC criterion
pred.test.HPM <- predict(model.bas, newdata = ames_train, estimator="HPM")
pred.HPM.rmse <- sqrt(mean((exp(pred.test.HPM$fit) - ames_train$price)^2))
pred.HPM.rmse
model.AIC <- stepAIC(model,direction="both",k=2)
summary(model.AIC) # model based on AIC criterion
model.bas <- bas.lm(log(price)~log(Overall.Qual+1)+log(area+1)+log(Total.Bsmt.SF+1)+log(X1st.Flr.SF+1)+log(Full.Bath+1)+log(Garage.Area+1)+log(Lot.Area+1)+log(X2nd.Flr.SF+1)+log(Half.Bath+1)+log(Bedroom.AbvGr+1),data = ames_train, prior = "BIC", modelprior=uniform()) # Bayesian Regression Model
load("ames_train.Rdata")
pred.test.model <- predict(model,newdata=ames_train)
pred.test.model[is.na(pred.test.model)] <- 0
pred.rmse.model <- sqrt(mean((exp(pred.test.model)-ames_train$price)^2))
pred.rmse.model # RMSE of First model
pred.test.modelaic <- predict(model.AIC,newdata=ames_train)
pred.test.modelaic[is.na(pred.test.modelaic)] <- 0
pred.rmse.modelaic <- sqrt(mean((exp(pred.test.modelaic)-ames_train$price)^2))
pred.rmse.modelaic # RMSE of Model based on AIC criterion
pred.test.HPM <- predict(model.bas, newdata = ames_train, estimator="HPM")
pred.HPM.rmse <- sqrt(mean((exp(pred.test.HPM$fit) - ames_train$price)^2))
pred.HPM.rmse
load("ames_train.Rdata")
pred.test.model <- predict(model,newdata=ames_train)
pred.test.model[is.na(pred.test.model)] <- 0
pred.rmse.model <- sqrt(mean((exp(pred.test.model)-ames_train$price)^2))
pred.rmse.model # RMSE of First model
pred.test.modelaic <- predict(model.AIC,newdata=ames_train)
pred.test.modelaic[is.na(pred.test.modelaic)] <- 0
pred.rmse.modelaic <- sqrt(mean((exp(pred.test.modelaic)-ames_train$price)^2))
pred.rmse.modelaic # RMSE of Model based on AIC criterion
pred.test.HPM <- predict(model.bas, newdata = ames_train, estimator="BPM")
pred.HPM.rmse <- sqrt(mean((exp(pred.test.HPM$fit) - ames_train$price)^2))
pred.HPM.rmse
load("ames_train.Rdata")
pred.test.model <- predict(model,newdata=ames_train)
pred.test.model[is.na(pred.test.model)] <- 0
pred.rmse.model <- sqrt(mean((exp(pred.test.model)-ames_train$price)^2))
pred.rmse.model # RMSE of First model
pred.test.modelaic <- predict(model.AIC,newdata=ames_train)
pred.test.modelaic[is.na(pred.test.modelaic)] <- 0
pred.rmse.modelaic <- sqrt(mean((exp(pred.test.modelaic)-ames_train$price)^2))
pred.rmse.modelaic # RMSE of Model based on AIC criterion
pred.test.HPM <- predict(model.bas, newdata = ames_train, estimator="MPM")
pred.HPM.rmse <- sqrt(mean((exp(pred.test.HPM$fit) - ames_train$price)^2))
pred.HPM.rmse
model.AIC <- stepAIC(model,direction="both",k=2)
summary(model.AIC) # model based on AIC criterion
model.bas <- bas.lm(log(price)~log(Overall.Qual+1)+log(area+1)+log(Total.Bsmt.SF+1)+log(X1st.Flr.SF+1)+log(Full.Bath+1)+log(Garage.Area+1)+log(Lot.Area+1)+log(X2nd.Flr.SF+1)+log(Half.Bath+1)+log(Bedroom.AbvGr+1),data = ames_train, prior = "AIC", modelprior=uniform()) # Bayesian Regression Model
load("ames_train.Rdata")
pred.test.model <- predict(model,newdata=ames_train)
pred.test.model[is.na(pred.test.model)] <- 0
pred.rmse.model <- sqrt(mean((exp(pred.test.model)-ames_train$price)^2))
pred.rmse.model # RMSE of First model
pred.test.modelaic <- predict(model.AIC,newdata=ames_train)
pred.test.modelaic[is.na(pred.test.modelaic)] <- 0
pred.rmse.modelaic <- sqrt(mean((exp(pred.test.modelaic)-ames_train$price)^2))
pred.rmse.modelaic # RMSE of Model based on AIC criterion
pred.test.HPM <- predict(model.bas, newdata = ames_train, estimator="MPM")
pred.HPM.rmse <- sqrt(mean((exp(pred.test.HPM$fit) - ames_train$price)^2))
pred.HPM.rmse
load("ames_train.Rdata")
pred.test.model <- predict(model,newdata=ames_train)
pred.test.model[is.na(pred.test.model)] <- 0
pred.rmse.model <- sqrt(mean((exp(pred.test.model)-ames_train$price)^2))
pred.rmse.model # RMSE of First model
pred.test.modelaic <- predict(model.AIC,newdata=ames_train)
pred.test.modelaic[is.na(pred.test.modelaic)] <- 0
pred.rmse.modelaic <- sqrt(mean((exp(pred.test.modelaic)-ames_train$price)^2))
pred.rmse.modelaic # RMSE of Model based on AIC criterion
pred.test.HPM <- predict(model.bas, newdata = ames_train, estimator="HPM")
#pred.HPM.rmse <- sqrt(mean((exp(pred.test.HPM$fit) - ames_train$price)^2))
#pred.HPM.rmse
pred.test.HPM
pred.test.HPM$fit
load("ames_train.Rdata")
pred.test.model <- predict(model,newdata=ames_train)
pred.test.model[is.na(pred.test.model)] <- 0
pred.rmse.model <- sqrt(mean((exp(pred.test.model)-ames_train$price)^2))
pred.rmse.model # RMSE of First model
pred.test.modelaic <- predict(model.AIC,newdata=ames_train)
pred.test.modelaic[is.na(pred.test.modelaic)] <- 0
pred.rmse.modelaic <- sqrt(mean((exp(pred.test.modelaic)-ames_train$price)^2))
pred.rmse.modelaic # RMSE of Model based on AIC criterion
pred.test.HPM <- predict(model.bas, newdata = ames_train, estimator="MPM")
pred.HPM.rmse <- sqrt(mean((exp(pred.test.HPM$fit) - ames_train[,1:998]$price)^2))
load("ames_train.Rdata")
pred.test.model <- predict(model,newdata=ames_train)
pred.test.model[is.na(pred.test.model)] <- 0
pred.rmse.model <- sqrt(mean((exp(pred.test.model)-ames_train$price)^2))
pred.rmse.model # RMSE of First model
pred.test.modelaic <- predict(model.AIC,newdata=ames_train)
pred.test.modelaic[is.na(pred.test.modelaic)] <- 0
pred.rmse.modelaic <- sqrt(mean((exp(pred.test.modelaic)-ames_train$price)^2))
pred.rmse.modelaic # RMSE of Model based on AIC criterion
pred.test.HPM <- predict(model.bas, newdata = ames_train, estimator="MPM")
pred.HPM.rmse <- sqrt(mean((exp(pred.test.HPM$fit) - ames_train$price)^2))
pred.HPM.rmse
load("ames_train.Rdata")
pred.test.model <- predict(model,newdata=ames_train)
pred.test.model[is.na(pred.test.model)] <- 0
pred.rmse.model <- sqrt(mean((exp(pred.test.model)-ames_train$price)^2))
pred.rmse.model # RMSE of First model
pred.test.modelaic <- predict(model.AIC,newdata=ames_train)
pred.test.modelaic[is.na(pred.test.modelaic)] <- 0
pred.rmse.modelaic <- sqrt(mean((exp(pred.test.modelaic)-ames_train$price)^2))
pred.rmse.modelaic # RMSE of Model based on AIC criterion
pred.test.HPM <- predict(model.bas, newdata = ames_train, estimator="HPM")
pred.HPM.rmse <- sqrt(mean((exp(pred.test.HPM$fit) - ames_train$price)^2))
pred.HPM.rmse
load("ames_test.Rdata")
final_predictions <- predict(model.AIC,ames_test, interval = "prediction", level = 0.95)
pred.final <- sqrt(mean((exp(final_predictions) - ames_test$price)^2))
pred.final
final_predictions <- predict(model.AIC,ames_test)
pred.final <- sqrt(mean((exp(final_predictions) - ames_test$price)^2))
pred.final
final_predictions <- predict(model.AIC,ames_test, interval = "prediction", level = 0.95)
pred.final <- sqrt(mean((exp(final_predictions) - ames_test$price)^2))
pred.final
final_predictions <- predict(model.AIC,ames_test)
pred.final <- sqrt(mean((exp(final_predictions) - ames_test$price)^2))
pred.final
final_predictions
pred.final
exp(final_predictions)
final_preds <- predict(final_model,ames_test)
final_model <- lm(log(price)~log(Overall.Qual+1)+log(Overall.Cond+1)+log(area+1)+log(Total.Bsmt.SF+1)+log(X1st.Flr.SF+1)+log(Full.Bath+1)+log(Garage.Area+1)+log(Lot.Area+1)+log(X2nd.Flr.SF+1)+log(Half.Bath+1)+log(Bedroom.AbvGr+1)+Heating.QC+Kitchen.Qual+Garage.Qual+Bsmt.Qual+Neighborhood+Central.Air+log(Year.Built)+log(TotRms.AbvGrd)+log(Year.Remod.Add),data=ames_train)
summary(final_model)
m1 <- stepAIC(final_model,direction="forward",k=2) # AIC criterion
final_preds <- predict(final_model,ames_test)
#final_predictions[is.na(final_predictions)] <- 0
preds.final <- sqrt(mean((exp(final_preds) - ames_test$price)^2))
preds.final
final_preds <- predict(final_model,ames_test)
final_preds[is.na(final_preds)] <- 0
preds.final <- sqrt(mean((exp(final_preds) - ames_test$price)^2))
preds.final
final_preds <- predict(final_model,ames_test,interval = "prediction",level = 0.95)
final_preds[is.na(final_preds)] <- 0
preds.final <- sqrt(mean((exp(final_preds) - ames_test$price)^2))
preds.final
final_predictions <- predict(model.AIC,ames_test,interval = "prediction",level = 0.95)
pred.final <- sqrt(mean((exp(final_predictions) - ames_test$price)^2))
pred.final
load("ames_validation.Rdata")
final_preds_val <- predict(final_model,ames_validation,interval="prediction",level=0.95)
load("ames_validation.Rdata")
ames_validation <- ames_validation %>% filter(Neighborhood != "Landmrk")
final_preds_val <- predict(final_model,ames_validation,interval="prediction",level=0.95)
final_preds_val[is.na(final_preds_val)] <- 0
pred.final.val <- sqrt(mean((exp(final_preds_va;) - ames_validation$price)^2))
final_preds_val <- predict(final_model,ames_validation,interval="prediction",level=0.95)
final_preds_val[is.na(final_preds_val)] <- 0
pred.final.val <- sqrt(mean((exp(final_preds_val) - ames_validation$price)^2))
pred.final.val
# RMSE
final_preds_val <- predict(final_model,ames_validation,interval="prediction",level=0.95)
final_preds_val[is.na(final_preds_val)] <- 0
pred.final.val <- sqrt(mean((exp(final_preds_val) - ames_validation$price)^2))
pred.final.val
# Coverage Probability
predict.full <- exp(predict(final_model, ames_validation, interval = "prediction"))
predict.full <- as.data.frame(predict.full)
predict.full[is.na(predict.full)] <- 0
coverage.prob.full <- mean(ames_validation$price > predict.full[,"lwr"] &
ames_validation$price < predict.full[,"upr"])
coverage.prob.full
# RMSE
final_preds_val <- predict(final_model,ames_validation,interval="prediction",level=0.95)
final_preds_val[is.na(final_preds_val)] <- 0
pred.final.val <- sqrt(mean((exp(final_preds_val) - ames_validation$price)^2))
pred.final.val
# Coverage Probability
predict.full <- exp(predict(final_model, ames_validation, interval = "prediction"))
predict.full[is.na(predict.full)] <- 0
coverage.prob.full <- mean(ames_validation$price > predict.full[,"lwr"] &
ames_validation$price < predict.full[,"upr"])
coverage.prob.full
